rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    match /users/{userId} {
      allow read, write: if request.auth != null && request.auth.uid == userId;
    }
    match /pets/{petId} {
      // PERMISSÃO DE LEITURA:
      // Permite que o dono do pet leia os dados.
      allow read: if request.auth.uid == resource.data.tutorId;

      // PERMISSÃO DE ESCRITA:
      // Permite que um usuário crie um pet, DESDE QUE ele se declare
      // como o dono (tutorId) no documento que está sendo criado.
      allow create: if request.auth.uid == request.resource.data.tutorId;

      // Permite que o dono do pet atualize ou delete os dados.
      allow update, delete: if request.auth.uid == resource.data.tutorId;
    }
    match /appointments/{appointmentId} {
      // O tutor do pet pode criar/ler/atualizar/deletar seus próprios agendamentos.
      allow read, write: if request.auth != null && get(/databases/$(database)/documents/pets/$(request.resource.data.petId)).data.tutorId == request.auth.uid;
      // Profissionais podem ler todos os agendamentos
      allow list: if request.auth != null && get(/databases/$(database)/documents/tutors/$(request.auth.uid)).data.role == 'professional';
    }
    match /tutors/{tutorId} {
        // Usuários podem ler e atualizar seu próprio perfil.
        allow read, update: if request.auth != null && request.auth.uid == tutorId;
        // Profissionais podem ler perfis de tutores
        allow get: if request.auth != null && get(/databases/$(database)/documents/tutors/$(request.auth.uid)).data.role == 'professional';
        // Permite a criação inicial (cadastro). A regra no 'write' abaixo protege contra sobrescritas.
        allow create: if request.auth != null;
    }
     match /invoices/{invoiceId} {
      allow read: if request.auth != null && (request.auth.uid == resource.data.clientId || get(/databases/$(database)/documents/tutors/$(request.auth.uid)).data.role == 'professional');
      allow write: if request.auth != null && get(/databases/$(database)/documents/tutors/$(request.auth.uid)).data.role == 'professional';
    }
    match /inventory/{itemId} {
       allow read, write: if request.auth != null && get(/databases/$(database)/documents/tutors/$(request.auth.uid)).data.role == 'professional';
    }
     match /staff/{staffId} {
       allow read, write: if request.auth != null && get(/databases/$(database)/documents/tutors/$(request.auth.uid)).data.role == 'professional';
    }
  }
}
